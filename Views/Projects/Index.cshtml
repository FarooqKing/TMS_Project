@model IEnumerable<TMS_Project.Models.Project>

@{
    ViewData["Title"] = "Projects";
}


<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">Projects</h4>
                @if (User.IsInRole("Admin"))
                {
                    <a id="btnCreateProject" class="btn btn-primary">Create New</a>
                }
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="example4" class="display table table-striped">
                        <thead>
                            <tr>
                                <th>
                                    Project Name
                                </th>

                                <th>
                                    Project Manager 
                                </th>
                                <th>
                                    Team Lead
                                </th>
                                 <th>
                                    Project Status
                                </th>
                                <th>
                                    App/Rej
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model)
                            {
                                <tr>
                                    <td><a href="@Url.Action("Index", "Tasks", new { id = user.ProjectId })">@user.ProjectName</a></td>
                                    <td>
                                        @Html.DisplayFor(modelItem => user.Manager.UserName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => user.TeamLead.UserName)
                                    </td>
                                     <td>
                                        @Html.DisplayFor(modelItem => user.Status.StatusName)
                                        @* Approved/Reject *@
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => user.Status.StatusName)
                                       
                                    </td>
                                    <td>
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <div class="d-flex">
                                                <a class="btn btn-info btn-sm m-2" onclick="EditProject(@user.ProjectId)" title="Edit"><i class="fa fa-edit"></i></a>
                                            @* <a class="btn btn-warning btn-sm m-2" onclick="DetailProject(@item.ProjectId)"><i class="fa fa-info"></i></a>
                                            *@ <form asp-action="Delete" method="post" class="deleteForm">
                                                    <input type="hidden" name="id" value="@user.ProjectId" asp-for="@user.ProjectId" />
                                                <button type="submit" class="btn btn-danger btn-sm m-2"><i class="fa fa-trash"></i></button>
                                            </form>

                                        </div>
                                        }
                                        @if(User.IsInRole("Team Lead")){
                                        <div class="d-flex">
                                                <a id="btnCreateAssignedTeam" class="btn btn-primary" onclick="ProjectStatus(@user.ProjectId)">
                                                    <i class="fa-solid fa-pen-nib"></i>
                                                    </a>
                                            </div>
                                        }
                                        @if (User.IsInRole("Project Manager"))
                                        {
                                            <div class="d-flex " style="justify-content:space-between">
                                                <div>
                                                <a id="btnCreateAssignedTeam" class="btn btn-primary" onclick="AssignedTeam(@user.ProjectId)" style="width:9rem ; margin-right:1rem">Assign To</a>
                                                </div>

                                                <div>
                                                    <a id="btnCreateAssignedTeam" class="btn btn-primary" onclick="ProjectStatus(@user.ProjectId)" style="display:flex"><i class="fa-solid fa-thumbs-up"></i>||<i class="fa-solid fa-thumbs-down"></i></a>
                                                </div>
                                            </div>
                                        }
                                        </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bd-example-modal-lg" id="ProjectCreate" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="CreateModalHeader"> </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal">
                </button>
            </div>
            <div class="modal-body" id="createProjectPreview">
                @await Html.PartialAsync("/Views/Projects/_Create.cshtml", new Project())
            </div>

        </div>
    </div>
</div>

<div class="modal fade bd-example-modal-lg" id="Assignteampopup" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"> Assigned Project to Team Lead</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal">
                </button>
            </div>
            <div class="modal-body" id="AssignteamPreview">
                @await Html.PartialAsync("/Views/Projects/_AssignedUser.cshtml", new Project())
            </div>

        </div>
    </div>
</div>

<div class="modal fade bd-example-modal-lg" id="projectStatus" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Project Status</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal">
                </button>
            </div>
            <div class="modal-body" id="projectStatusPreview">
                @await Html.PartialAsync("/Views/Projects/_ProjectStatus.cshtml", new Project())
            </div>

        </div>
    </div>
</div>

<div class="modal fade bd-example-modal-lg" id="ProjectDetail" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"> Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal">
                </button>
            </div>
            <div class="modal-body" id="DetailProjectPreview">
                @await Html.PartialAsync("/Views/Projects/_Details.cshtml", new Project())
            </div>

        </div>
    </div>
</div>


@section Scripts {

    <script type="text/javascript">

        $(function () {
            $("#btnCreateProject").click(function () {
                $("#CreateModalHeader").text("Create Project");
                $("#btnCreateProjectPost").text("Create Project");
                $("#btnCreateProjectPost").addClass("btn-primary");
                $("#btnCreateProjectPost").removeClass("btn-warning");

                $("#ProjectCreate").modal("show");
            });

        });



        function ProjectStatusFunc() {
                alert('aaaa');
                       var form = $("#CreateStatusForm")[0];


                           $.ajax({
                               url: '@Url.Action("ProjectStatus", "Projects")',
                               type: 'POST',
                               data: $(form).serialize(),
                               success: function (data) {
                                   if (data.success) {

                                       window.location.reload();
                                   }
                                   // Check if response contains partial view
                                   $("#projectStatusPreview").html(data);

                                   $("#projectStatus").modal("show");
                               }
                           });

                       form.classList.add("was-validated");
                       return false;
        }
        function InsertProject() {

            var form = $("#CreateProjectForm")[0];
            var isValid = form.checkValidity();

            if (!isValid) {
            }
            else {


                $.ajax({
                    url: '@Url.Action("Create", "Projects")',
                    type: 'POST',
                    data: $(form).serialize(),
                    success: function (data) {
                        if (data.success) {

                            window.location.reload();
                        }
                        // Check if response contains partial view
                        $("#createProjectPreview").html(data);

                        if ($("#hdnProjectId").val() > 0) {


                            $("#btnCreateProjectPost").text("Update Project");
                            $("#btnCreateProjectPost").addClass("btn-warning");
                            $("#btnCreateProjectPost").removeClass("btn-primary");
                        }
                        else {
                            $("#btnCreateProjectPost").text("Create Project");
                            $("#btnCreateProjectPost").addClass("btn-primary");
                            $("#btnCreateProjectPost").removeClass("btn-warning");
                        }

                        $("#ProjectCreate").modal("show");
                    }
                });
            }
            form.classList.add("was-validated");
            return false;
        }

        function EditProject(projectId) {

            $.ajax({
                type: "Get",
                url: '@Url.Action("Edit", "Projects")',
                data: { id: projectId },
                success: function (data) {
                    $('#createProjectPreview').html(data);
                    $("#CreateModalHeader").text("Update Project");
                    $("#btnCreateProjectPost").text("Update Project");
                    $("#btnCreateProjectPost").addClass("btn-warning");
                    $("#btnCreateProjectPost").removeClass("btn-primary");
                    $('#ProjectCreate').modal('show');

                }
            })
        }
 
 //        function AssignedTeam(projectId) {

 //     $.ajax({
 //         type: "Get",
 //         url: '@Url.Action("AssignedUser", "Projects")',
 //         data: { id: projectId },
 //         success: function (data) {
 //             $('#AssignteamPreview').html(data);

 //             $('#Assignteampopup').modal('show');

 //         }
 //     });
 // }
      
        function ProjectStatus(projectId) {

            $.ajax({
                type: "Get",
                url: '@Url.Action("ProjectStatus", "Projects")',
                data: { id: projectId },
                success: function (data) {
                    $('#projectStatusPreview').html(data);

                    $('#projectStatus').modal('show');

                }
            });
        }

       

        //to assign the project to team leader (Popup) 

        function AssignedTeam(projectId) {

            $.ajax({
                type: "Get",
                url: '@Url.Action("AssignedUser", "Projects")',
                data: { id: projectId },
                success: function (data) {
                    $('#AssignteamPreview').html(data);

                    $('#Assignteampopup').modal('show');

                }
            });
        }
       
        
        // To save and show data of assign project
        function AssignProjectToTeamlead() {
   
     var form = $("#AssignProjectToTeamLeadForm")[0];
     var isValid = form.checkValidity();

     if (!isValid) {
     }
     else {
         



         $.ajax({
             url: '@Url.Action("AssignedUser", "Projects")',
             type: 'POST',
             data: $(form).serialize(),
             success: function (data) {
                 if (data.success) {
                  
                     window.location.reload();
                     $("#Assignteampopup").modal("hide");
                 }




                 $("#Assignteampopup #errorMsg").addClass("alert alert-danger");
                 $("#Assignteampopup #errorMsg").html(data.message);
                 $("#Assignteampopup").modal("show");

             }
         });
     }
     form.classList.add("was-validated");
     return false;
 }



        function DetailProject(projectId) {

            $.ajax({
                type: "Get",
                url: '@Url.Action("Details", "Projects")',
                data: { id: projectId },
                success: function (data) {
                    $('#DetailProjectPreview').html(data);

                    $('#ProjectDetail').modal('show');

                }
            })
        }

        $('.deleteForm').submit(function (event) {
            var form = this;
            event.preventDefault();
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                  form.submit();
                    // If user confirms, form submission proceeds as usual
                } else {
                    event.preventDefault();
                }
            });
        });



    </script>
}